***ANSWERS TO QUESTIONS***
 Question 1:
     Which hash table collision resolution method did you use
     (eg. chaining or open addressing)? Explain your choice
     briefly (less than 25 words).

MY ANSWER: 
I used the open address method because it is usually faster than chaning and in this scenario
i determined it would also be faster under these circumstances

 
 Question 2:
       Which hash function (division or multiplication) did you use?
       How did you convert a string into a number?

MY ANSWER:
I would have used the division method because i used open addressing and mulitplication
would've required the table size to be a power of two, however, I used DJB2 by a friends'
recommendation as I was finding it difficult to impliment with division. Strings were converted
using their ACII codes and coinciding numbers.

 
 
 
 Question 3:
       Another legal XML tag not used in this lab is the
       stand-alone tag.  This kind of tag
       combines both a start-tag and end-tag in one.
       It is identified with a '/' (slash) preceding the
       final >.  (For example, the <foo/>
       is a stand-alone tag that is self balancing.
       
       Describe briefly how
       you would modify Part 3 to allow this kind of tag.

MY ANSWER:
In-order to implement this, I would look to modify the beginning by including an if statement to check for the end tag. 
By doing so, it will only push things that satisfy the if statement to pop or push them. If for example a / is not found
it would not push anything

  
